[{"/home/alex/WebstormProjects/tests/contacts/client/src/index.js":"1","/home/alex/WebstormProjects/tests/contacts/client/src/App.js":"2","/home/alex/WebstormProjects/tests/contacts/client/src/components/Form.js":"3","/home/alex/WebstormProjects/tests/contacts/client/src/components/NavBar.js":"4","/home/alex/WebstormProjects/tests/contacts/client/src/components/Loader.js":"5","/home/alex/WebstormProjects/tests/contacts/client/src/components/UserItem.js":"6","/home/alex/WebstormProjects/tests/contacts/client/src/components/UserListPage.js":"7","/home/alex/WebstormProjects/tests/contacts/client/src/components/SearchPage.js":"8","/home/alex/WebstormProjects/tests/contacts/client/src/components/CreatePage.js":"9","/home/alex/WebstormProjects/tests/contacts/client/src/components/EditPage.js":"10","/home/alex/WebstormProjects/tests/contacts/client/src/components/hooks/user.hook.js":"11"},{"size":234,"mtime":1609980460078,"results":"12","hashOfConfig":"13"},{"size":944,"mtime":1610130272199,"results":"14","hashOfConfig":"13"},{"size":6297,"mtime":1610131365902,"results":"15","hashOfConfig":"13"},{"size":760,"mtime":1609892588359,"results":"16","hashOfConfig":"13"},{"size":231,"mtime":1608943193082,"results":"17","hashOfConfig":"13"},{"size":560,"mtime":1610070580939,"results":"18","hashOfConfig":"13"},{"size":4581,"mtime":1610119450535,"results":"19","hashOfConfig":"13"},{"size":4126,"mtime":1610118450125,"results":"20","hashOfConfig":"13"},{"size":135,"mtime":1610118551988,"results":"21","hashOfConfig":"13"},{"size":202,"mtime":1610119165116,"results":"22","hashOfConfig":"13"},{"size":3131,"mtime":1610131405170,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"uf98vc",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/alex/WebstormProjects/tests/contacts/client/src/index.js",[],["48","49"],"/home/alex/WebstormProjects/tests/contacts/client/src/App.js",[],"/home/alex/WebstormProjects/tests/contacts/client/src/components/Form.js",["50"],"import React, {useState, useCallback} from 'react';\nimport {useLocation} from \"react-router\";\nimport {ToastContainer, toast} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Loader from \"./Loader\";\nimport {useUser} from './hooks/user.hook'\n\nexport default function Form(props) {\n\n    const emptyUserForm = {\n        name: '',\n        picture: '',\n        description: ''\n    }\n\n    const [form, setForm] = useState(props.user || emptyUserForm);\n    const [photo, setPhoto] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const location = useLocation();\n    const { saveUser } = useUser();\n\n    const changeInputHandler = (event) => {\n        setForm(prev => ({\n            ...prev,\n            [event.target.name]: event.target.value\n        }))\n    }\n\n    const changeImageHandler = async (event) => {\n        const file = event.target.files[0];\n        const url = URL.createObjectURL(file);\n        setPhoto(file);\n        await setForm(prev => ({\n            ...prev,\n            picture: url\n        }))\n    }\n\n    const fetchImageToCloudinary = useCallback(async (picture) => {\n        const formData = new FormData();\n        formData.append('file', picture);\n        formData.append('upload_preset', 'users_photo');\n        const response =\n            await fetch('https://api.cloudinary.com/v1_1/agul72/image/upload',\n                {\n                    method: 'POST',\n                    body: formData\n                });\n        if (!response.ok) {\n            throw new Error(\"Cloudinary uploading error:\");\n        }\n        return await response.json();\n    }, []);\n\n    const changePictureUrl = async (photo) => {\n        const image = await fetchImageToCloudinary(photo);\n        setForm(prev => ({\n            ...prev,\n            picture: image.secure_url\n        }));\n        // let url = form.picture;\n        // while (image.secure_url !== url) {\n        //     setTimeout(() => url = form.picture, 1000);\n        // }\n    }\n\n    const submitHandler = async event => {\n        event.preventDefault();\n        if (!form.name.trim()) {\n            return toast.info(\"Name is empty\", {\n                position: toast.POSITION.TOP_LEFT\n            });\n        }\n\n\n            try {\n                setLoading(true);\n                if (photo) {\n                    await changePictureUrl(photo);\n                    // const image = await fetchImageToCloudinary(photo);\n                    // setForm(prev => ({\n                    //     ...prev,\n                    //     picture: image.secure_url\n                    // }));\n                }\n                console.log(form);\n                switch (location.pathname) {\n                    case '/create':\n                        await saveUser('/api/user/', 'POST', form);\n                        resetHandler(event);\n                        break;\n                    case '/update':\n                        await saveUser('/api/user', 'PUT', form);\n                        break;\n                    default:\n                        return;\n                }\n                setLoading(false);\n\n            } catch (e) {\n                console.log(\"Fetch user error:\", e.message);\n                setLoading(false);\n            }\n\n    }\n\n    const resetHandler = (event) => {\n        event.preventDefault();\n        setForm(emptyUserForm);\n    }\n\n    return (\n        <form\n            onSubmit={submitHandler}\n            onReset={resetHandler}\n            className='mt-3'\n        >\n            <ToastContainer autoClose={2000}/>\n\n            <div className={'form-group'}>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <div className=\"mb-1\">\n                            <input\n                                type=\"text\"\n                                className={'form-control'}\n                                name={'name'}\n                                value={form.name}\n                                placeholder='Name...'\n                                onChange={changeInputHandler}\n                            />\n                        </div>\n                        <div className=\"mb-1\">\n                        <textarea\n                            rows={5}\n                            className={'form-control'}\n                            name={'description'}\n                            value={form.description}\n                            placeholder='Description...'\n                            onChange={changeInputHandler}\n                        />\n                        </div>\n                    </div>\n                    <div className=\"col\">\n                        <div className=\"mb-1\">\n                            <img\n                                src={form.picture}\n                                alt=\"Empty\"\n                                style={{height: 135 + \"px\",}}\n                            />\n                        </div>\n                        <div className=\"mb-1\">\n                            <input\n                                className=\"form-control\"\n                                type=\"file\"\n                                accept=\"image/*\"\n                                name={'picture'}\n                                onChange={changeImageHandler}\n                            />\n                        </div>\n                    </div>\n                </div>\n                <hr/>\n                <div className='row'>\n                    <button\n                        className={'btn btn-success btn-sm mt-2 col-1'}\n                        type={'submit'}\n                    >\n                        {location.pathname.toUpperCase().slice(1)}\n                    </button>\n                    {(location.pathname === '/update')\n                        ? <button\n                            className={'btn btn-secondary btn-sm mt-2 col-1'}\n                            type={'reset'}\n                        >\n                            Reset\n                        </button>\n                        : null}\n                </div>\n                {loading ? <Loader/> : null}\n            </div>\n\n        </form>\n    )\n}\n","/home/alex/WebstormProjects/tests/contacts/client/src/components/NavBar.js",[],"/home/alex/WebstormProjects/tests/contacts/client/src/components/Loader.js",[],"/home/alex/WebstormProjects/tests/contacts/client/src/components/UserItem.js",[],"/home/alex/WebstormProjects/tests/contacts/client/src/components/UserListPage.js",[],"/home/alex/WebstormProjects/tests/contacts/client/src/components/SearchPage.js",[],"/home/alex/WebstormProjects/tests/contacts/client/src/components/CreatePage.js",[],"/home/alex/WebstormProjects/tests/contacts/client/src/components/EditPage.js",[],"/home/alex/WebstormProjects/tests/contacts/client/src/components/hooks/user.hook.js",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":63,"column":24,"nodeType":"57","messageId":"58","endLine":63,"endColumn":48},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'url'.","ArrowFunctionExpression","unsafeRefs","no-global-assign","no-unsafe-negation"]